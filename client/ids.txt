siteid:
27PxiNPjJtLw6W2DJ
27LGp6H8EfZBdp8yw

cityid:
ewg7uSzQRkkbofNiN
TmG3yf3xADkr3cG9o

{
  "sId": "27LGp6H8EfZBdp8yw",
  "sName": "pipi"
}
//---------------------------------test queries
query{
  site(_id: "27PxiNPjJtLw6W2DJ") {
    name
    address
    type
    serialNumber
    phone
    qrCode
  }
}
query{
  sites(cityId: "ewg7uSzQRkkbofNiN") {
    name
    address
  }
}

query sites($city_id: String!) {
  sitesByCityId(cityId: $city_id) {
    _id
    name
    address
  }
}

//----------------------------withData example
const GET_CATEGORIES = gql`
  query ijjjjjjjjallCategories($customerId: String) {
    customer(customerId: $customerId) {
      _id
      allCategories{
        _id
        name
      }
    }
  }
`;

const withData = graphql(GET_CATEGORIES, {
  options: props => {
    return {
      variables: {
        customerId: props.customerId,
      }
    };
  }
});


//--------------------possible html shit

<!-- <link
href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css"
rel="stylesheet"
/> -->
<link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico" /> -->
<!-- <script type="module" src="App.jsx"></script> -->
<!-- <script src="https://cdn.jsdelivr.net/npm/handsontable-pro@6.2.2/dist/handsontable.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@handsontable/react/dist/react-handsontable.min.js"></script> -->
<!-- <link
      href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css"
      rel="stylesheet"
    />
    <script
      src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"
      async
    ></script> -->
<!-- <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="theme-color" content="#000000" /> -->

<!-- <script src="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js"></script> -->
<!-- <div id = "base-container">        
 <div id="button-container">
        <button id="update-button" class="button">update</button>
        <button id="delete-button" class="button">delete</button>
        <button id="load-cityId-button" class="button">load by city id</button>
        <button id="load-id-button" class="button">load by site id</button>
        <button id="filter-columns-button" class="button">show filters</button>
        <button id="clear-button" class="button">clear</button>
        <button id="download-csv-button" class="button">download csv</button>
      </div>
      <div id="filter-container" class="hidden">
        <div id="columns">
          <label
            ><input type="checkbox" name="name" value="1" checked />name</label
          >
          <label
            ><input
              type="checkbox"
              name="address"
              value="2"
              checked
            />address</label
          >
          <label
            ><input type="checkbox" name="types" value="3" checked />type</label
          >
          <label
            ><input
              type="checkbox"
              name="serial-number"
              value="4"
              checked
            />serial number</label
          >
          <label
            ><input
              type="checkbox"
              name="phone"
              value="5"
              checked
            />phone</label
          >
          <label
            ><input
              type="checkbox"
              name="qrCode"
              value="6"
              checked
            />qrCode</label
          >
        </div>
      </div>
      <div id="cityId-input-container" class="hidden">
        <div id="cityId-label">city id</div>
        <input type="text" id="cityId-input" />
        <button id="submit-cityId">submit</button>
      </div>
      <div id="console-container">
        <div id="console-label">console</div>
        <div id="console"></div>
      </div>

      
//-----------------------------------working query to server
const testQuery = gql`
  query {
    sitesByCityId(cityId: "ewg7uSzQRkkbofNiN") {
      _id
      name
      address
    }
  }
`;
 <div>
        <Query query={testQuery}>
          {({ loading, error, data }) => {
            if (loading) return "Loading...";
            if (error) return `Error! ${error.message}`;

            return (
              <select name="site">
                {data.sitesByCityId.map(site => (
                  <option key={site._id} value={site.name}>
                    {site.name}
                  </option>
                ))}
              </select>
            );
          }}
        </Query>
      </div>


      //---icon?

      "icons": [
  //   {
  //     "src": "favicon.ico",
  //     "sizes": "64x64 32x32 24x24 16x16",
  //     "type": "image/x-icon"
  //   }
  // ],